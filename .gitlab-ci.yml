variables:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  # For builds in shell executors, try to not leave traces outside our work folder
  RUSTUP_HOME: .rustup
  CARGO_HOME: .cargo

.common_build:
  script:
    - rustup default stable
    - rustup target install $TARGET
    - cargo build --workspace --target=$TARGET --all-features --verbose
    - cargo clippy --all-features --all-targets -- -D warnings -A clippy::nonminimal-bool -A clippy::too_many_arguments
    - cargo fmt -- --check
    - mkdir -p test-binaries-$TARGET/workers/
    - cargo build --tests --target=$TARGET
    - cargo build --tests --target=$TARGET --message-format=json | python3 tests/copy_artifacts.py test-binaries-$TARGET/
    - cargo install cargo-license
    - cargo license --all-features --tsv
  artifacts:
    expire_in: 1h
    name: test-binaries
    paths:
      - test-binaries-$TARGET/

build_linux:
  extends: .common_build
  tags:
    - linux
    - selfhosted
    - builder
  image: rust:latest
  before_script:
    - apt update
    - apt install -y libseccomp-dev libseccomp2 python3 gcc-multilib
    - dpkg --add-architecture i386
    - apt update
    - apt install -y libseccomp-dev:i386 libseccomp2:i386
  parallel:
    matrix:
      - TARGET: i686-unknown-linux-gnu
        ARCH: i686
      - TARGET: x86_64-unknown-linux-gnu
        ARCH: x86_64

build_windows:
  extends: .common_build
  tags:
    - windows
    - selfhosted
    - builder
  variables:
    RUSTFLAGS: -D warnings -Ctarget-feature=+crt-static
  before_script:
    - if (!(Get-Command python)) { choco install -y --no-progress python3 }
    - Invoke-WebRequest -Uri https://win.rustup.rs/$ARCH -OutFile rustup-init.exe
    - .\rustup-init.exe -y --default-toolchain stable-$TARGET
    - $env:Path=[System.Environment]::GetEnvironmentVariable("Path","Machine")+";"+[System.Environment]::GetEnvironmentVariable("Path","User")
  parallel:
    matrix:
      - TARGET: i686-pc-windows-msvc
        ARCH: i686
      - TARGET: x86_64-pc-windows-msvc
        ARCH: x86_64

test_win10_1507_x86_64:
  tags:
    - windows
    - selfhosted
    - win10
    - win10_1507
    - x86_64
  needs:
    - job: build_windows
      artifacts: true
  script:
    - tests/run.ps1 test-binaries-x86_64-pc-windows-msvc/

test_win7_x86_64:
  tags:
    - windows
    - selfhosted
    - win7
    - x86_64
  needs:
    - job: build_windows
      artifacts: true
  script:
    - tests/run.ps1 test-binaries-x86_64-pc-windows-msvc/

#test_win7_i686:
#  tags:
#    - windows
#    - selfhosted
#    - win7
#    - i686
#  needs:
#    - job: build_windows
#      artifacts: true
#  script:
#    - tests/run.ps1 test-binaries-i686-pc-windows-msvc/

test_debian11_i686:
  tags:
    - linux
    - debian11
    - i686
  needs:
    - job: build_linux
      artifacts: true
  before_script:
    - (/sbin/ldconfig -p | grep -iq libseccomp) || (apt update && apt install -y libseccomp2)
  script:
    - tests/run.sh test-binaries-i686-unknown-linux-gnu/

test_debian11_x86_64:
  tags:
    - linux
    - debian11
    - x86_64
  needs:
    - job: build_linux
      artifacts: true
  before_script:
    - (/sbin/ldconfig -p | grep -iq libseccomp) || (apt update && apt install -y libseccomp2)
  script:
    - tests/run.sh test-binaries-x86_64-unknown-linux-gnu/
