variables:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  # For builds in shell executors, try to not leave traces outside our work folder
  RUSTUP_HOME: .rustup
  CARGO_HOME: .cargo

check:
  image: rust:latest
  tags:
    - linux
    - shared
  script:
    - rustup default stable
    - rustup show
    - rustup component add clippy rustfmt
    - cargo clippy --all-features --all-targets -- -D warnings
    - cargo fmt -- --check
    - cargo install cargo-license
    - cargo license --all-features --tsv

build_linux:
  image: rust:latest
  tags:
    - linux
    - shared
  before_script:
    - apt update && apt install -y libseccomp-dev libseccomp2 python3 python-is-python3
  script:
    - rustup default stable
    - cargo build --workspace --all-targets --all-features --verbose
    - mkdir -p artifacts-tests/workers/
    - cargo build --tests --message-format=json | python tests/copy_artifacts.py artifacts-tests/
  artifacts:
    expire_in: 1h
    name: tests-linux
    paths:
      - artifacts-tests/

build_windows:
  tags:
    - windows
    - selfhosted
    - builder
  variables:
    RUSTFLAGS: -D warnings -Ctarget-feature=+crt-static
  before_script:
    - Invoke-WebRequest -Uri https://win.rustup.rs/x86_64 -OutFile rustup-init.exe
    - .\rustup-init.exe -y --default-toolchain stable-x86_64-pc-windows-msvc
    - $env:Path=[System.Environment]::GetEnvironmentVariable("Path","Machine")+";"+[System.Environment]::GetEnvironmentVariable("Path","User")
  script:
    - cargo build --workspace --all-targets --all-features --verbose
    - mkdir -p artifacts-tests/workers/
    - cargo build --tests --message-format=json | python tests/copy_artifacts.py artifacts-tests/
  artifacts:
    expire_in: 1h
    name: tests-windows
    paths:
      - artifacts-tests/

test_win10_latest_x64:
  tags:
    - windows
    - selfhosted
    - win10
    - amd64
    - latest
  needs:
    - job: build_windows
      artifacts: true
  script:
    - tests/run.ps1 artifacts-tests/

test_win7_x64:
  tags:
    - windows
    - selfhosted
    - win7
    - amd64
  needs:
    - job: build_windows
      artifacts: true
  script:
    - tests/run.ps1 artifacts-tests/

test_linux:
  image: debian:latest
  tags:
    - linux
    - shared
  needs:
    - job: build_linux
      artifacts: true
  before_script:
    - apt update && apt install -y libseccomp2
  script:
    - tests/run.sh artifacts-tests/
